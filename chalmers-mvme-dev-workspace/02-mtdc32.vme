{
    "DAQConfig": {
        "enabled": true,
        "events": [
            {
                "enabled": true,
                "id": "{ed01e6ce-640b-45a4-a790-1b4694ce6766}",
                "irqLevel": 1,
                "irqVector": 0,
                "modules": [
                    {
                        "baseAddress": 33554432,
                        "enabled": true,
                        "id": "{9e2474a3-f2a9-4c10-99ee-6034570c7e1f}",
                        "initScripts": [
                            {
                                "enabled": true,
                                "id": "{4e9aaf3e-d237-47ca-8e7b-d716b3b69729}",
                                "name": "Module Init",
                                "properties": {
                                    "icon": ":/vme_script.png"
                                },
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "## Parameters MTDC-32\n\n# Operation Mode\n# ############################################################################\n\n0x6040  0           # 0 -> banks connected\n                    # 1 -> operate banks independently\n\n# tdc_resolution\n0x6042  2          \t# 9 -> 500 ps\n                    # 8 -> 250 ps\n                    # 7 -> 125 ps\n                    # 6 -> 62.5 ps (1 ns /  16)\n                    # 5 -> 31.3 ps (1 ns /  32)\n                    # 4 -> 15.6 ps (1 ns /  64)\n                    # 3 ->  7.8 ps (1 ns / 128)\n                    # 2 ->  3.9 ps (1 ns / 256)\n\n\n# first_hit\n0x605C  0b11        # bit0: bank0, bit: bank1\n                    # 1 -> only transmit first hit of a channel\n                    # 0 -> transmit all hits of a channel in the window\n\n# Trigger Setup\n# ############################################################################\n# bank0_win_start\n0x6050  16284       # 16284 = -100ns\n\t\t\t\t\t# Window of interest start time relative to trigger.\n\t\t\t\t\t# Window start   = 16384  + delay[ns];\n\t\t\t\t\t#  Hex notation: = 0x3FFF + delay[ns];\n\t\t\t\t\t# Delay can be negative to register hits before the trigger\n                    # Delay may be in the range [-16384 ns, +16384 ns]\n                    # < 0 -> window starts before trigger\n                    # > 0 -> window is delayed\n\n\n# bank1_win_start\n0x6052  16284      \t# same as for bank0\n\n# bank0_win_width\n0x6054  200        \t# 200 = 200ns; Unit: ns, max 16k == 16.384 us, unsigned\n\n# bank1_win_width\n0x6056  200        \t# Unit: ns, max 16k == 16.384 us, unsigned\n\n# trigger source\n# bank0_trig_source\n0x6058  0x001       # In split bank mode for bank0, otherwise for both banks.\n\t\t\t\t\t# Defines the trigger which creates the window of interest. This can be one or\n\t\t\t\t\t# both of the trigger inputs, any of the 32 channel inputs or a whole bank.\n\t\t\t\t\t#   0x001 -> trigger 0 input\n\t\t\t\t\t#   0x002 -> trigger 1 input\n\t\t\t\t\t#   0x100 -> bank0\n\t\t\t\t\t#   0x200 -> bank1\n\t\t\t\t\t#   single channel: trig_source = 128 + (chan * 4)\n\t\t\t\t\t#                   with channel in 0..31\n \t\t\t\t\t# +-------------+--------------------+---------+\n                    # | Whole bank  |     32_channels    |  trig   |\n                    # |   2 bits    |       6 bits       | 2 bits  |\n                    # +============================================|\n                    # |      0 | B0 | active |   Chan    | T1 | T0 |\n                    # |        |    |        |   [4:0]   |    |    |\n                    # +--------+----+--------+-----------+----+----+\n\n# bank1_trig_source\n0x605A  0x002       # Only in split bank mode. Same as bank0_trig_source.\n\n# I/O\n# ############################################################################\n\n# ECL_term\n0x6062  0b000       # switch ECL/LVDS terminators on (1 -> on)\n                    # +-----------+-------+-------+-------+\n                    # | Bit       | 2     | 1     | 0     |\n                    # +===========+=======+=======+=======+\n                    # | ECL input | reset | gate1 | gate0 |\n                    # | term.     | ECL2  | ECL1  | ECL0  |\n                    # +-----------+-------+-------+-------+\n\n# ECL_trig1_osc\n0x6064  0           # 0 -> trig1 input\n                    # 1 -> oscillator input (also set CTRA.ts_sources (0x6096)!)\n\n# trig_select\n0x6068  0           # 0 -> trigger 0 and 1 from NIM inputs\n                    # 1 -> trigger 0 and 1 from ECL inputs\n\n# NIM_trig1_osc (NIM 1)\n0x606A  0           # 0 -> trig1 input\n                    # 1 -> oscillator input (also set CTRA.ts_sources (0x6096)!)\n                    #\n# NIM_busy (NIM 0, bottom Lemo)\n0x606E  0           # 0 -> as busy (= FIFO full or ACQ stopped)\n                    # 3 -> as CBus output\n                    # 8 -> data in buffer above threshold 0x6018 (= Data ready)\n\n\n\n# Bank Input Configuration for unipolar signal inputs\n# ############################################################################\n# negative_edge\n0x6060  0b00        # bit0: bank0, bit1: bank1\n                    # if bit is set:\n                    # * for differential input jumper: channel triggers on\n                    #   negative edge\n                    # * for unipolar input jumper: trigger on rising edge of\n                    #   signal\n\n# bank0_input_thr\n0x6078  105         # Discriminator level for unipolar input bank0.\n                    # For NIM 105 is optimum.\n\n# bank1_input_thr\n0x607A  105         # Discriminator level for bank1.\n\n# Internal Test Pulser\n# ############################################################################\n0x6070  7           # 0 -> off\n                    # 3 -> on: always trig0 and one channel from 0 to 31, then\n                    #          trig1 cycling. Time difference from trig0 to\n                    #          channel about 0s +- 2ns.\n\n# Timestamp/Event Counters: CTRA, CTRB\n# ############################################################################\n# ts_sources\n0x6096  0b00        # bit 0: frequency source (0 -> VME, 1 -> external)\n                    # bit 1: external reset enable\n\n# ts_divisor (16 bit value)\n0x6098  1           # timestamp = time / ts_divisor\n                    # 0 means division by 65536\n\n# stop_ctr\n#0x60AE  0b00       # bit 0: stop CTRB (time_0, time_1, time_2)\n                    # bit 1: stop CTRA (ts_counter_lo, ts_counter_hi)\n                    # with 0 -> run, 1 -> stop counter\n\n##### Time Stamper Mode ##########\n# output_format\n0x6044  0           # 0 -> standard (time difference)\n                    # 1 -> time stamper mode\n                    # Note: In time stamper mode further \"Operation Mode\" and\n                    # \"Trigger\" registers have no effect.\n"
                            },
                            {
                                "enabled": true,
                                "id": "{599912ac-cb37-45d6-ab31-a713a2ea415e}",
                                "name": "VME Interface Settings",
                                "properties": {
                                    "icon": ":/vme_script.png"
                                },
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "# Settings related to the readout loop\n# #####################################\n0x6010  ${sys_irq}                          # irq level\n\n# IRQ_source and thresholds\n#0x601C 1                               # 1 -> specifies number of words\n#0x6018  100                            # IRQ-FIFO threshold, words\n0x601C 0                                # 0 -> the following register specifies the number of events\n0x601E $(${mesy_readout_num_events} + 2)    # IRQ-FIFO threshold, events\n\n# marking_type\n0x6038 ${mesy_eoe_marker}                              # End Of Event marking\n                                        # 0 -> event counter\n                                        # 1 -> time stamp\n                                        # 3 -> extended time stamp\n\n# multi event mode:\n0x6036 0xb                              # 0x0 -> single event\n                                        # 0x3 -> multi event, number of words\n                                        # 0xb -> multievent, transmits number of events specified\n\n# max_transfer_data\n0x601A ${mesy_readout_num_events}            # multi event mode == 0x3 -> Berr is emitted when more or equal the\n                                        #   specified number of words have been sent and \"End Of Event\" is detected.\n                                        # multi event mode == 0xb -> Berr is emitted when the specified number\n                                        #   of events has been transmitted.\n\n# Stop the module from accepting triggers and clear the readout FIFO.\n# Acquisition will be started simultaneously for all modules in the parent\n# event by the \"Multicast DAQ Start\" script.\n0x603a 0   # stop acq\n0x603c 1   # FIFO reset\n0x6034 1   # readout reset\n\n# MCST - Multicast Setup\n# #####################################\n0x6020 0x80                             # Enable multicast\n0x6024 0x${mesy_mcst}                        # Set 8 high bits of MCST address"
                            }
                        ],
                        "name": "mtdc32",
                        "type": "mtdc32",
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vmeReadout": {
                            "enabled": true,
                            "id": "{4e5ed4a3-86ad-4d24-9a46-50671e200071}",
                            "name": "Module Readout",
                            "properties": {
                                "icon": ":/vme_script.png"
                            },
                            "variable_table": {
                                "name": "",
                                "variables": {
                                }
                            },
                            "vme_script": "# BLT readout until BERR or number of transfers reached\nmbltfifo a32 0x0000 65535\n"
                        },
                        "vmeReset": {
                            "enabled": true,
                            "id": "{252ad72d-9d35-4454-aa23-8e3e9436ef3a}",
                            "name": "Module Reset",
                            "properties": {
                                "icon": ":/vme_script.png"
                            },
                            "variable_table": {
                                "name": "",
                                "variables": {
                                }
                            },
                            "vme_script": "# Reset the module\n0x6008 1\nwait 500ms\n\n## Get Module ids for log file\nprint \"Hardware ID:\"\nread a32 d16 0x6008\t# hardware ID\naccu_mask_rotate 0x0000ffff 0\naccu_test eq 0x5004 \"MTDC-32 hardware id check\"\n\nprint \"Firmware Revision:\"\nread a32 d16 0x600E # firmware revision\n\n0x603a 0   # stop acq\n0x603c 1   # FIFO reset\n0x6034 1   # readout reset\n"
                        }
                    }
                ],
                "name": "event0",
                "scalerReadoutFrequency": 0,
                "scalerReadoutPeriod": 2,
                "triggerCondition": "Interrupt",
                "triggerOptions": {
                    "IRQUseIACK": false,
                    "sis3153.timer_period": 1
                },
                "variable_table": {
                    "name": "",
                    "variables": {
                        "mesy_eoe_marker": {
                            "comment": "EndOfEvent marker for mesytec modules (0: eventcounter, 1: timestamp, 3: extended_timestamp).",
                            "definitionLocation": "",
                            "value": "1"
                        },
                        "mesy_mcst": {
                            "comment": "The most significant byte of the 32-bit multicast address to be used by this event.",
                            "definitionLocation": "",
                            "value": "bb"
                        },
                        "mesy_readout_num_events": {
                            "comment": "Number of events to read out in each cycle.",
                            "definitionLocation": "",
                            "value": "1"
                        },
                        "sys_irq": {
                            "comment": "IRQ value set for the VME Controller for this event.",
                            "definitionLocation": "",
                            "value": "1"
                        }
                    }
                },
                "vme_scripts": {
                    "daq_start": {
                        "enabled": true,
                        "id": "{70255c5c-cf3b-4e51-89f8-0ded6f58cac0}",
                        "name": "DAQ Start",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Start the acquisition sequence for all modules via the events multicast address.\nwriteabs a32 d16 0x${mesy_mcst}00603a      0   # stop acq\nwriteabs a32 d16 0x${mesy_mcst}006090      3   # reset CTRA and CTRB\nwriteabs a32 d16 0x${mesy_mcst}00603c      1   # FIFO reset\nwriteabs a32 d16 0x${mesy_mcst}00603a      1   # start acq\nwriteabs a32 d16 0x${mesy_mcst}006034      1   # readout reset\n\nsetbase 0x02000000\n0x6070 7"
                    },
                    "daq_stop": {
                        "enabled": true,
                        "id": "{93e34e30-38f4-4d7e-bc3c-5908e2e3901a}",
                        "name": "DAQ Stop",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "writeabs a32 d16 0x${mesy_mcst}00603a     0   # stop acquisition\n"
                    },
                    "readout_end": {
                        "enabled": true,
                        "id": "{0b22f15a-07f1-4f7b-b3de-9a42a56d689f}",
                        "name": "Cycle End",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Commands executed at the end of each readout cycle\n# Do a multicast write of the readout_reset register\nwriteabs a32 d16 0x${mesy_mcst}006034      1   # readout reset\n"
                    },
                    "readout_start": {
                        "enabled": true,
                        "id": "{15a4bc61-b04c-4b70-9308-ea1c5be7fb23}",
                        "name": "Cycle Start",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Commands executed at the start of each readout cycle\n"
                    }
                }
            }
        ],
        "global_objects": {
            "children": [
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{4a122c27-f760-47c3-86fd-0265372b725b}",
                        "name": "daq_start",
                        "properties": {
                            "display_name": "DAQ Start",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{24f22b84-5fdf-49d7-8d5b-0bc63b8e518a}",
                        "name": "daq_stop",
                        "properties": {
                            "display_name": "DAQ Stop",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{e5f20063-4436-4b99-abce-b901319dad9a}",
                        "name": "manual",
                        "properties": {
                            "display_name": "Manual",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "VMEScriptConfig",
                    "data": {
                        "enabled": true,
                        "id": "{9832cb7e-d5c0-4017-97ab-5c35fdda62d8}",
                        "name": "mvlc_trigger_io",
                        "properties": {
                            "display_name": "MVLC Trigger/IO",
                            "icon": ":/vme_module.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "##############################################################\n# MVLC Trigger I/O  setup via internal VME interface         #\n##############################################################\n\n# Note: This file was generated by mvme. Editing existing\n# values is allowed and these changes will used by mvme\n# when next parsing the script. Changes to the basic\n# structure, like adding new write or read commands, are not\n# allowed. These changes will be lost the next time the file\n# is modified by mvme.\n\n# The initialization commands for each Trigger I/O unit are\n# wrapped in mvlc_stack_begin/end blocks. This is to ensure\n# the commands are executed atomically without being\n# interleaved by other commands also touching the Trigger I/O\n# system, e.g. the routine for readout of the builtin DSO.\n\n# Check for minimum required mvme version\nmvme_require_version 1.9.1\n\n# Internal MVLC VME interface address\nsetbase 0xffff0000\n\n# Level0 #####################################################\n\n# timer0\nmvlc_stack_begin\n  0x0200 0x0000    # select L0.Unit0\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer1\nmvlc_stack_begin\n  0x0200 0x0001    # select L0.Unit1\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer2\nmvlc_stack_begin\n  0x0200 0x0002    # select L0.Unit2\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer3\nmvlc_stack_begin\n  0x0200 0x0003    # select L0.Unit3\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# trigger_resource0\nmvlc_stack_begin\n  0x0200 0x0004    # select L0.Unit4\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource1\nmvlc_stack_begin\n  0x0200 0x0005    # select L0.Unit5\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource2\nmvlc_stack_begin\n  0x0200 0x0006    # select L0.Unit6\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource3\nmvlc_stack_begin\n  0x0200 0x0007    # select L0.Unit7\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource4\nmvlc_stack_begin\n  0x0200 0x0008    # select L0.Unit8\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource5\nmvlc_stack_begin\n  0x0200 0x0009    # select L0.Unit9\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource6\nmvlc_stack_begin\n  0x0200 0x000a    # select L0.Unit10\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource7\nmvlc_stack_begin\n  0x0200 0x000b    # select L0.Unit11\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# stack_busy0\nmvlc_stack_begin\n  0x0200 0x000c    # select L0.Unit12\n  0x0300      0    # stack_index\nmvlc_stack_end\n\n# stack_busy1\nmvlc_stack_begin\n  0x0200 0x000d    # select L0.Unit13\n  0x0300      0    # stack_index\nmvlc_stack_end\n\n# NIM0\nmvlc_stack_begin\n  0x0200 0x0010    # select L0.Unit16\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM1\nmvlc_stack_begin\n  0x0200 0x0011    # select L0.Unit17\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM2\nmvlc_stack_begin\n  0x0200 0x0012    # select L0.Unit18\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM3\nmvlc_stack_begin\n  0x0200 0x0013    # select L0.Unit19\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM4\nmvlc_stack_begin\n  0x0200 0x0014    # select L0.Unit20\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM5\nmvlc_stack_begin\n  0x0200 0x0015    # select L0.Unit21\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM6\nmvlc_stack_begin\n  0x0200 0x0016    # select L0.Unit22\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM7\nmvlc_stack_begin\n  0x0200 0x0017    # select L0.Unit23\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM8\nmvlc_stack_begin\n  0x0200 0x0018    # select L0.Unit24\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM9\nmvlc_stack_begin\n  0x0200 0x0019    # select L0.Unit25\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM10\nmvlc_stack_begin\n  0x0200 0x001a    # select L0.Unit26\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM11\nmvlc_stack_begin\n  0x0200 0x001b    # select L0.Unit27\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM12\nmvlc_stack_begin\n  0x0200 0x001c    # select L0.Unit28\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM13\nmvlc_stack_begin\n  0x0200 0x001d    # select L0.Unit29\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# IRQ1\nmvlc_stack_begin\n  0x0200 0x0021    # select L0.Unit33\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ2\nmvlc_stack_begin\n  0x0200 0x0022    # select L0.Unit34\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ3\nmvlc_stack_begin\n  0x0200 0x0023    # select L0.Unit35\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ4\nmvlc_stack_begin\n  0x0200 0x0024    # select L0.Unit36\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ5\nmvlc_stack_begin\n  0x0200 0x0025    # select L0.Unit37\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ6\nmvlc_stack_begin\n  0x0200 0x0026    # select L0.Unit38\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# Level1 #####################################################\n\n# L1.LUT0\nmvlc_stack_begin\n  0x0200 0x0100    # select L1.Unit0\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT1\nmvlc_stack_begin\n  0x0200 0x0101    # select L1.Unit1\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT2\nmvlc_stack_begin\n  0x0200 0x0102    # select L1.Unit2\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0380      0    # connect input0 to 'NIM8'\n  0x0382      0    # connect input1 to 'NIM9'\n  0x0384      0    # connect input2 to 'NIM10'\nmvlc_stack_end\n\n# L1.LUT3\nmvlc_stack_begin\n  0x0200 0x0103    # select L1.Unit3\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT4\nmvlc_stack_begin\n  0x0200 0x0104    # select L1.Unit4\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT5\nmvlc_stack_begin\n  0x0200 0x0105    # select L1.Unit5\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT6\nmvlc_stack_begin\n  0x0200 0x0106    # select L1.Unit6\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# Level2 #####################################################\n\n# L2.LUT0\nmvlc_stack_begin\n  0x0200 0x0200    # select L2.Unit0\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT0 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# L2.LUT1\nmvlc_stack_begin\n  0x0200 0x0201    # select L2.Unit1\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT1 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# L2.LUT2\nmvlc_stack_begin\n  0x0200 0x0202    # select L2.Unit2\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT2 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# Level3 #####################################################\n\n# StackStart0\nmvlc_stack_begin\n  0x0200 0x0300    # select L3.Unit0\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart1\nmvlc_stack_begin\n  0x0200 0x0301    # select L3.Unit1\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart2\nmvlc_stack_begin\n  0x0200 0x0302    # select L3.Unit2\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart3\nmvlc_stack_begin\n  0x0200 0x0303    # select L3.Unit3\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger0\nmvlc_stack_begin\n  0x0200 0x0304    # select L3.Unit4\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger1\nmvlc_stack_begin\n  0x0200 0x0305    # select L3.Unit5\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger2\nmvlc_stack_begin\n  0x0200 0x0306    # select L3.Unit6\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger3\nmvlc_stack_begin\n  0x0200 0x0307    # select L3.Unit7\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# Counter0+Timestamper\nmvlc_stack_begin\n  0x0200 0x0308    # select L3.Unit8\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter1\nmvlc_stack_begin\n  0x0200 0x0309    # select L3.Unit9\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter2\nmvlc_stack_begin\n  0x0200 0x030a    # select L3.Unit10\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter3\nmvlc_stack_begin\n  0x0200 0x030b    # select L3.Unit11\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter4\nmvlc_stack_begin\n  0x0200 0x030c    # select L3.Unit12\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter5\nmvlc_stack_begin\n  0x0200 0x030d    # select L3.Unit13\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter6\nmvlc_stack_begin\n  0x0200 0x030e    # select L3.Unit14\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter7\nmvlc_stack_begin\n  0x0200 0x030f    # select L3.Unit15\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# NIM unit connections (Note: NIM setup is done in the Level0 section)\n\n# NIM0\nmvlc_stack_begin\n  0x0200 0x0310    # select L3.Unit16\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM1\nmvlc_stack_begin\n  0x0200 0x0311    # select L3.Unit17\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM2\nmvlc_stack_begin\n  0x0200 0x0312    # select L3.Unit18\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM3\nmvlc_stack_begin\n  0x0200 0x0313    # select L3.Unit19\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM4\nmvlc_stack_begin\n  0x0200 0x0314    # select L3.Unit20\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM5\nmvlc_stack_begin\n  0x0200 0x0315    # select L3.Unit21\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM6\nmvlc_stack_begin\n  0x0200 0x0316    # select L3.Unit22\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM7\nmvlc_stack_begin\n  0x0200 0x0317    # select L3.Unit23\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM8\nmvlc_stack_begin\n  0x0200 0x0318    # select L3.Unit24\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM9\nmvlc_stack_begin\n  0x0200 0x0319    # select L3.Unit25\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM10\nmvlc_stack_begin\n  0x0200 0x031a    # select L3.Unit26\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM11\nmvlc_stack_begin\n  0x0200 0x031b    # select L3.Unit27\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM12\nmvlc_stack_begin\n  0x0200 0x031c    # select L3.Unit28\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM13\nmvlc_stack_begin\n  0x0200 0x031d    # select L3.Unit29\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS0\nmvlc_stack_begin\n  0x0200 0x031e    # select L3.Unit30\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS1\nmvlc_stack_begin\n  0x0200 0x031f    # select L3.Unit31\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS2\nmvlc_stack_begin\n  0x0200 0x0320    # select L3.Unit32\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n##############################################################\n# MVLC Trigger I/O specific meta information                 #\n##############################################################\nmeta_block_begin mvlc_trigger_io\nnames:\n  level0:\n    0: timer0\n    1: timer1\n    2: timer2\n    3: timer3\n    4: trigger_resource0\n    5: trigger_resource1\n    6: trigger_resource2\n    7: trigger_resource3\n    8: trigger_resource4\n    9: trigger_resource5\n    10: trigger_resource6\n    11: trigger_resource7\n    12: stack_busy0\n    13: stack_busy1\n    14: sysclk\n    15: daq_start\n    16: NIM0\n    17: NIM1\n    18: NIM2\n    19: NIM3\n    20: NIM4\n    21: NIM5\n    22: NIM6\n    23: NIM7\n    24: NIM8\n    25: NIM9\n    26: NIM10\n    27: NIM11\n    28: NIM12\n    29: NIM13\n    30: <unused>\n    31: <unused>\n    32: <unused>\n    33: IRQ1\n    34: IRQ2\n    35: IRQ3\n    36: IRQ4\n    37: IRQ5\n    38: IRQ6\n  level1:\n    0:\n      0: L1.LUT0.OUT0\n      1: L1.LUT0.OUT1\n      2: L1.LUT0.OUT2\n    1:\n      0: L1.LUT1.OUT0\n      1: L1.LUT1.OUT1\n      2: L1.LUT1.OUT2\n    2:\n      0: L1.LUT2.OUT0\n      1: L1.LUT2.OUT1\n      2: L1.LUT2.OUT2\n    3:\n      0: L1.LUT3.OUT0\n      1: L1.LUT3.OUT1\n      2: L1.LUT3.OUT2\n    4:\n      0: L1.LUT4.OUT0\n      1: L1.LUT4.OUT1\n      2: L1.LUT4.OUT2\n    5:\n      0: L1.LUT5.OUT0\n      1: L1.LUT5.OUT1\n      2: L1.LUT5.OUT2\n    6:\n      0: L1.LUT6.OUT0\n      1: L1.LUT6.OUT1\n      2: L1.LUT6.OUT2\n  level2:\n    0:\n      0: L2.LUT0.OUT0\n      1: L2.LUT0.OUT1\n      2: L2.LUT0.OUT2\n    1:\n      0: L2.LUT1.OUT0\n      1: L2.LUT1.OUT1\n      2: L2.LUT1.OUT2\n    2:\n      0: L2.LUT2.OUT0\n      1: L2.LUT2.OUT1\n      2: L2.LUT2.OUT2\n  level3:\n    0: StackStart0\n    1: StackStart1\n    2: StackStart2\n    3: StackStart3\n    4: MasterTrigger0\n    5: MasterTrigger1\n    6: MasterTrigger2\n    7: MasterTrigger3\n    8: Counter0+Timestamper\n    9: Counter1\n    10: Counter2\n    11: Counter3\n    12: Counter4\n    13: Counter5\n    14: Counter6\n    15: Counter7\n    30: LVDS0\n    31: LVDS1\n    32: LVDS2\n    33: <not connected>\nsettings:\n  level0:\n    0:\n      soft_activate: false\n    1:\n      soft_activate: false\n    2:\n      soft_activate: false\n    3:\n      soft_activate: false\n  level3:\n    8:\n      soft_activate: false\n    9:\n      soft_activate: false\n    10:\n      soft_activate: false\n    11:\n      soft_activate: false\n    12:\n      soft_activate: false\n    13:\n      soft_activate: false\n    14:\n      soft_activate: false\n    15:\n      soft_activate: false\nmeta_block_end"
                    }
                }
            ],
            "enabled": true,
            "id": "{e5281f5a-4b9b-4ad0-9ed0-f4ba325dca8c}",
            "name": "global_objects",
            "properties": {
                "display_name": "Global Objects",
                "icon": ":/vme_global_scripts.png"
            },
            "variable_table": {
                "name": "",
                "variables": {
                }
            }
        },
        "id": "{6ead2a69-af88-434d-8ca2-72d56ff14325}",
        "name": "",
        "properties": {
            "version": 4
        },
        "variable_table": {
            "name": "",
            "variables": {
            }
        },
        "vme_controller": {
            "settings": {
                "method": "first",
                "mvlc_crate_id": 0,
                "mvlc_eth_enable_jumbos": false,
                "mvlc_hostname": "MVLC-0124"
            },
            "type": "MVLC_USB"
        }
    }
}
