{
    "DAQConfig": {
        "enabled": true,
        "events": [
            {
                "enabled": true,
                "id": "{b5b65656-d154-4f02-a6d6-d4cd177dfa97}",
                "irqLevel": 1,
                "irqVector": 0,
                "modules": [
                    {
                        "baseAddress": 201326592,
                        "enabled": true,
                        "id": "{4dd3103f-b914-4126-aa3b-f0f68aa5ada8}",
                        "initScripts": [
                            {
                                "enabled": true,
                                "id": "{0366ac23-c24f-4558-bb0a-5dd36b13838d}",
                                "name": "Module Init",
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "## Parameters for MDPP-16_SCP\n# Operation Mode\n# ############################################################################\n# tdc_resolution\n0x6042  0           # 0 ->  24 ps = 25 ns / 1024\n                    # 1 ->  49 ps = 25 ns / 512\n                    # 2 ->  98 ps = 25 ns / 256\n                    # 3 -> 195 ps = 25 ns / 128\n                    # 4 -> 391 ps = 25 ns / 64\n                    # 5 -> 781 ps = 25 ns / 32\n\n# first_hit\n0x605C  1           # 0 -> transmit all hits per channel in the window\n                    # 1 -> only transmit first hit per channel in the window\n\n# Trigger Setup\n# ############################################################################\n# win_start\n0x6050  $(16384 - 100 / 1.56) # second term: offset in ns, positive or negative\n                    # Window of interest start time relative to trigger.\n                    # Window start   = 16384  + delay[ns] / 1.56;\n                    # Delay can be negative to register hits before the trigger.\n                    # Delay may be in the range [-25560 ns, +25560 ns].\n                    # < 0 -> window starts before trigger\n                    # > 0 -> window is delayed\n\n# win_width (14 bit value)\n0x6054  $(200 / 1.56)    # first term in ns;\n                    # win_width = (win_width[ns] / 25ns * 16)\n                    # max value 16383; (Hex notation: 0x3FFF)\n                    # Range: [0, 25560 ns]\n\n# trig_source\n# Defines the trigger which creates the window of interest.\n0x6058  0x100       # 0x001 -> trigger 0 input\n                    # 0x002 -> trigger 1 input\n                    # 0x100 -> whole bank (self trigger; all channels)\n                    # single channel: trig_source = 128 + (chan * 4)\n                    #                 with channel in 0..15\n                    # +-------------+--------------------+---------+\n                    # | Whole bank  |     16_channels    |  trig   |\n                    # |   2 bits    |       6 bits       | 2 bits  |\n                    # +============================================|\n                    # |      0 | B0 | active | 0 | Chan  | T1 | T0 |\n                    # |        |    |        |   | [3:0] |    |    |\n                    # +--------+----+--------+---+-------+----+----+\n\n# trig_source_2\n0x605A  0           # When trig_source == 0, this register allows to set any\n                    # number of individual channels to create the trigger.\n                    # Bit 0 corresponds to channel 0, bit 15 corresponds to channel 15.\n                    # Setting a bit uses the channel as a trigger source.\n\n# trigger_output\n# NIM1 trigger output\n0x605E  0x100       # 0x100 -> whole bank (OR of all channels)\n                    # single channel: trigger_output = 128 + (chan * 4)\n                    #                 with channel in 0..15\n                    # +-------------+--------------------+---------+\n                    # | Whole bank  |     16_channels    |  trig   |\n                    # |   2 bits    |       6 bits       | 2 bits  |\n                    # +============================================|\n                    # |      0 | B0 | active | 0 | Chan  | X  | X  |\n                    # |        |    |        |   | [3:0] |    |    |\n                    # +--------+----+--------+---+-------+----+----+\n\n\n# I/O\n# ############################################################################\n# Sorted from top to bottom, as on the front panel.\n\n# ECL3 input\n0x6060  0x00        # 0x00 -> off\n                    # 0x01 -> trig0, terminated\n                    # 0x11 -> trig0, unterminated\n# ECL2 input\n0x6062  0x00        # 0x00 -> off\n                    # 0x01 -> sync, terminated\n                    # 0x11 -> sync, unterminated\n                    # 0x02 -> trig1, terminated\n                    # 0x12 -> trig1, unterminated\n# ECL1 input\n0x6064  0x00        # 0x00 -> off\n                    # 0x01 -> reset, terminated\n                    # 0x11 -> reset, unterminated\n# ECL0 output\n0x6066  0x00        # 0x0 -> off\n                    # 0x4 -> busy\n                    # 0x8 -> data in buffer above threshold 0x6018 (= Data ready)\n                    # 0x9 -> events in buffer above threshold 0x601E\n\n# NIM4 input\n0x6068  1           # 0 -> off\n                    # 1 -> trig0_in\n\n# NIM3\n# Note: Front panel Monitor setting overrides this setting (becomes mon1\n# output).\n0x606A  0           # 0 -> off\n                    # 2 -> sync in (also set CTRA.ts_sources (0x6096)!)\n# NIM2\n# Note: Front panel Monitor setting overrides this setting (becomes mon0\n# output).\n0x606C  1           # 0 -> off\n                    # 1 -> trig1_in\n                    # 2 -> reset\n\n# NIM1 is always trigger output\n\n# NIM0\n0x6074  1           # 0 -> off\n                    # 1 -> CBus\n                    # 4 -> busy_out (== FIFO full or ACQ stopped)\n                    # 8 -> data in buffer above threshold 0x6018\n                    # 9 -> events in buffer above threshold 0x601E\n\n# Internal Test Pulser\n# ############################################################################\n# pulser_status\n0x6070  1           # 0 -> off, 1 -> on\n\n# pulser_amplitude\n0x6072  400         # maximum amplitude: 0xFFF = 4095\n\n# Timestamp/Event Counters: CTRA, CTRB\n# ############################################################################\n# ts_sources\n0x6096  0b00        # bit 0: frequency source (0 -> VME, 1 -> external)\n                    # bit 1: external reset enable\n\n# ts_divisor (16 bit value)\n0x6098  1           # timestamp = time / ts_divisor\n                    # 0 means division by 65536\n\n# stop_ctr\n#0x60AE  0b00       # bit 0: stop CTRB (time_0, time_1, time_2)\n                    # bit 1: stop CTRA (ts_counter_lo, ts_counter_hi)\n                    # with 0 -> run, 1 -> stop counter\n"
                            },
                            {
                                "enabled": true,
                                "id": "{dd4e531c-404f-4a31-b156-db1f7504b920}",
                                "name": "Frontend Settings",
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "# Front end settings\n# ############################################################################\n# select_chan_pair\n0x6100  8       # 0 -> channel 0, 1\n                # 1 -> channel 2, 3\n                # ...\n                # 8 -> all channels (set to common values)\n# tf_int_diff\n0x6110  20      # TF integration/differentiation time common for both selected channels\n                # range 1..127 in multiples of 12.5 ns;\n                #    (12.5 (15) ns to 1.6 us)\n\n# PZ0 (signal_decay_time0 for selected channel0)\n0x6112   $(25000 / 12.5)  # first term: decay time in ns\n                # range 64..64k, 0.8 us to 800 us and infinite\n                # multiples of 12.5 ns\n\n# PZ1 (signal_decay_time1 for selected channel1)\n0x6114   $(25000 / 12.5)  # first term: decay time in ns\n\n# Gain (common for both selected channels)\n0x611A  $(2.0 * 100)  # gain * 100\n                # range 1..250\n                # 100   -> gain = 1\n                # 25000 -> gain = 250\n                #\n# threshold0\n0x611C  500    # 0..64k, 64k corresponds to full range\n# threshold1\n0x611E  500    # same as threshold0\n\n# shaping_time (common for both selected channels)\n0x6124  $(2000 / 12.5)  # first term: in ns\n                # FWHM-width in multiples of 12.5ns (200 == 2.5 us)\n                # range 8..2000 (100 ns to 25 us)\n\n# signal_rise_time, determines the flat top of trapezoidal shaper (common for both selected channels)\n0x612A  0       # multiple of 12.5 ns (7 bit value)\n                # 0 -> For Si-detectors, constant rise time detectors: shorted dead time.\n                # For germanium detectors with position dependent rise time set\n                # to largest possible signal rise time.\n                # This results in highest resolution and ballistic loss correction.\n\n##### Expert settings, usually the default settings are fine #######\n# BLR - base line restorer (common for both selected channels)\n0x6126  2       # 0 -> off\n                # 1 -> strict (int. time = 4 shaping times)\n                # 2 -> soft   (int. time = 8 shaping times)\n\n# reset_time (common for both selected channels)\n0x6128  16      # multiple of 12.5 ns, min = 16 (== 200ns)\n\n\n\n# Channel / Channel Pair Front end settings\n# ############################################################################\n/*\n# channels (0, 1)\n0x6100       0\n0x611C  0x00FF    # threshold 0\n0x611E  0x00FF    # threshold 1\n0x6112  0xFFFF    # PZ 0\n0x6114  0xFFFF    # PZ 1\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (2, 3)\n0x6100       1\n0x611C  0x00FF    # threshold 2\n0x611E  0x00FF    # threshold 3\n0x6112  0xFFFF    # PZ 2\n0x6114  0xFFFF    # PZ 3\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (4, 5)\n0x6100       2\n0x611C  0x00FF    # threshold 4\n0x611E  0x00FF    # threshold 5\n0x6112  0xFFFF    # PZ 4\n0x6114  0xFFFF    # PZ 5\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (6, 7)\n0x6100       3\n0x611C  0x00FF    # threshold 6\n0x611E  0x00FF    # threshold 7\n0x6112  0xFFFF    # PZ 6\n0x6114  0xFFFF    # PZ 7\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (8, 9)\n0x6100       4\n0x611C  0x00FF    # threshold 8\n0x611E  0x00FF    # threshold 9\n0x6112  0xFFFF    # PZ 8\n0x6114  0xFFFF    # PZ 9\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (10, 11)\n0x6100       5\n0x611C  0x00FF    # threshold 10\n0x611E  0x00FF    # threshold 11\n0x6112  0xFFFF    # PZ 10\n0x6114  0xFFFF    # PZ 11\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (12, 13)\n0x6100       6\n0x611C  0x00FF    # threshold 12\n0x611E  0x00FF    # threshold 13\n0x6112  0xFFFF    # PZ 12\n0x6114  0xFFFF    # PZ 13\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n# channels (14, 15)\n0x6100       7\n0x611C  0x00FF    # threshold 14\n0x611E  0x00FF    # threshold 15\n0x6112  0xFFFF    # PZ 14\n0x6114  0xFFFF    # PZ 15\n0x6110      20    # tf_int_diff\n0x611A    2000    # gain\n0x6124     160    # shaping_time\n0x6126       2    # BLR\n0x6128    1000    # reset_time\n0x612A      80    # signal_rise_time\n*/\n"
                            },
                            {
                                "enabled": true,
                                "id": "{761f837d-1d03-4585-80bc-ea73c2ca79e9}",
                                "name": "VME Interface Settings",
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "# Settings related to the readout loop\n# #####################################\n# Trigger output via IRQ-lines at Backplane; MDPP-16\n# Implemented since March 2021.\n# Each bit corresponds to one of the MDPP-16 channels.\n# 0x6300 0b1111'1111'1111'1111  # IRQ 1\n# 0x6304 0b1111'1111'1111'1111  # IRQ 2 ; example: all channels add their triggers to this IRQ line\n# 0x6308 0b1111'1111'1111'1111  # IRQ 3\n# 0x630C 0b1111'1111'1111'1111  # IRQ 4\n# 0x6310 0b1111'1111'1111'1111  # IRQ 5\n# 0x6314 0b1111'1111'1111'1111  # IRQ 6\n# 0x6318 0b1111'1111'1111'1111  # IRQ 7\n#######################################\n\n0x6010  ${sys_irq}                          # irq level\n\n# IRQ_source and thresholds\n#0x601C 1                                   # 1 -> specifies number of words\n#0x6018 100                                 # IRQ-FIFO threshold, words\n0x601C 0                                    # 0 -> the following register specifies the number of events\n0x601E $(${mesy_readout_num_events} + 2)    # IRQ-FIFO threshold, events\n\n# marking_type\n0x6038 ${mesy_eoe_marker}                   # End Of Event marking\n                                            # 0 -> event counter\n                                            # 1 -> time stamp\n                                            # 3 -> extended time stamp\n\n# multi event mode:\n0x6036 0xb                                  # 0x0 -> single event\n                                            # 0x3 -> multi event, number of words\n                                            # 0xb -> multievent, transmits number of events specified\n\n# max_transfer_data\n0x601A ${mesy_readout_num_events}           # multi event mode == 0x3 -> Berr is emitted when more or equal the\n                                            #   specified number of words have been sent and \"End Of Event\" is detected.\n                                            # multi event mode == 0xb -> Berr is emitted when the specified number\n                                            #   of events has been transmitted.\n\n# Stop the module from accepting triggers and clear the readout FIFO.\n# Acquisition will be started simultaneously for all modules in the parent\n# event by the \"Multicast DAQ Start\" script.\n0x603a 0   # stop acq\n0x603c 1   # FIFO reset\n0x6034 1   # readout reset\n\n# MCST - Multicast Setup\n# #####################################\n0x6020 0x80                                 # Enable multicast\n0x6024 0x${mesy_mcst}                       # Set 8 high bits of MCST address\n"
                            },
                            {
                                "enabled": true,
                                "id": "{e2511a86-aa59-4664-af92-29612f9422f3}",
                                "name": "Streaming and Sampling",
                                "variable_table": {
                                    "name": "",
                                    "variables": {
                                    }
                                },
                                "vme_script": "# Streaming and Sampling Settings\n# ############################################################################\n\nread a32 d16 0x600E # firmware revision\naccu_mask_rotate 0x000000ff 32\naccu_test_warn gte 0x50 \"MDPP-16_SCP >= FW2050 required for Sampling mode\"\n\n# output_format\n# 0 (default)   -> Standard time and amplitude data.\n# 4 (streaming) -> Since SCP FW2041. Enables streaming mode.\n# Individual bits: {no_resampling, sampling, standard_streaming, compact_streaming, adc, tdc}\n0x6044 0b000000\n\n\n# Sampling parameter (can be set for all channels or per channel pair)\n0x6100  8\t\t# select_chan_pair, 8 = all channels\n\n0x6146 0\t\t# number of pre-samples\n0x6148 30\t\t# total samples to output (even number required)\n0x614A 0b0000'0010\t\t# sampling settings [3:0]\n\t\t\t\t\t\t# 0 = directly from ADC\n\t\t\t\t\t\t# 1 = after deconvolution of pre-differentiation\n\t\t\t\t\t\t# 2 = output shaper of timing path\n\t\t\t\t\t\t# 3 = output shaper of amplitude path\n\t\t\t\t\t\t# sampling settings [7:4]\n\t\t\t\t\t\t# bit 7 set: no offset correction1\n"
                            }
                        ],
                        "name": "mdpp16_scp",
                        "type": "mdpp16_scp",
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vmeReadout": {
                            "enabled": true,
                            "id": "{87351a34-3010-48b9-93ce-d416be876a85}",
                            "name": "Module Readout",
                            "properties": {
                                "icon": ":/vme_script.png"
                            },
                            "variable_table": {
                                "name": "",
                                "variables": {
                                }
                            },
                            "vme_script": "# BLT readout until BERR or number of transfers reached\nmbltfifo a32 0x0000 65535\n"
                        },
                        "vmeReset": {
                            "enabled": true,
                            "id": "{3d6d0cc7-8533-44c3-9297-a7d2cd0138af}",
                            "name": "Module Reset",
                            "properties": {
                                "icon": ":/vme_script.png"
                            },
                            "variable_table": {
                                "name": "",
                                "variables": {
                                }
                            },
                            "vme_script": "# Reset the module\n0x6008 1\nwait 500ms\n\n## Get Module ids for log file\nprint \"Hardware ID:\"\nread a32 d16 0x6008\t# hardware ID\naccu_mask_rotate 0x0000ffff 0\naccu_test eq 0x5005 \"MDPP-16 hardware id check\"\n\nprint \"Firmware Revision:\"\nread a32 d16 0x600E # firmware revision\naccu_mask_rotate 0x0000f000 20\naccu_test eq 2 \"SCP firmware check\"\n\n0x603a 0   # stop acq\n0x603c 1   # FIFO reset\n0x6034 1   # readout reset\n"
                        }
                    }
                ],
                "name": "event0",
                "scalerReadoutFrequency": 0,
                "scalerReadoutPeriod": 2,
                "triggerCondition": "Interrupt",
                "triggerOptions": {
                    "IRQUseIACK": false,
                    "sis3153.timer_period": 1
                },
                "variable_table": {
                    "name": "",
                    "variables": {
                        "mesy_eoe_marker": {
                            "comment": "EndOfEvent marker for mesytec modules (0: eventcounter, 1: timestamp, 3: extended_timestamp).",
                            "definitionLocation": "",
                            "value": "1"
                        },
                        "mesy_mcst": {
                            "comment": "The most significant byte of the 32-bit multicast address to be used by this event.",
                            "definitionLocation": "",
                            "value": "bb"
                        },
                        "mesy_readout_num_events": {
                            "comment": "Number of events to read out in each cycle.",
                            "definitionLocation": "",
                            "value": "1"
                        },
                        "sys_irq": {
                            "comment": "IRQ value set for the VME Controller for this event.",
                            "definitionLocation": "",
                            "value": "1"
                        }
                    }
                },
                "vme_scripts": {
                    "daq_start": {
                        "enabled": true,
                        "id": "{7c3d28d0-017e-409f-b979-ed3597979a3a}",
                        "name": "DAQ Start",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Start the acquisition sequence for all modules via the events multicast address.\nwriteabs a32 d16 0x${mesy_mcst}00603a      0   # stop acq\nwriteabs a32 d16 0x${mesy_mcst}006090      3   # reset CTRA and CTRB\nwriteabs a32 d16 0x${mesy_mcst}00603c      1   # FIFO reset\nwriteabs a32 d16 0x${mesy_mcst}00603a      1   # start acq\nwriteabs a32 d16 0x${mesy_mcst}006034      1   # readout reset\n"
                    },
                    "daq_stop": {
                        "enabled": true,
                        "id": "{d6ee7b51-45b8-427b-bfa5-f0ac9586100c}",
                        "name": "DAQ Stop",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "writeabs a32 d16 0x${mesy_mcst}00603a     0   # stop acquisition\n"
                    },
                    "readout_end": {
                        "enabled": true,
                        "id": "{d26e865f-8e3c-43ec-8e0d-6662488549dd}",
                        "name": "Cycle End",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Commands executed at the end of each readout cycle\n# Do a multicast write of the readout_reset register\nwriteabs a32 d16 0x${mesy_mcst}006034      1   # readout reset\n"
                    },
                    "readout_start": {
                        "enabled": true,
                        "id": "{83487f7d-749f-4fa5-8dd4-d5a32669f054}",
                        "name": "Cycle Start",
                        "properties": {
                            "icon": ":/vme_script.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "# Commands executed at the start of each readout cycle\n"
                    }
                }
            }
        ],
        "global_objects": {
            "children": [
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{2845a0c4-e3d9-47a1-b2fa-270ed15f2aff}",
                        "name": "daq_start",
                        "properties": {
                            "display_name": "DAQ Start",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{d1aea172-a2a9-4ee3-b495-f84337d20a7d}",
                        "name": "daq_stop",
                        "properties": {
                            "display_name": "DAQ Stop",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "ContainerObject",
                    "data": {
                        "children": [
                        ],
                        "enabled": true,
                        "id": "{f5d00eb9-545f-4c54-ae3a-b0cb6ac13e43}",
                        "name": "manual",
                        "properties": {
                            "display_name": "Manual",
                            "icon": ":/folder_orange.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        }
                    }
                },
                {
                    "class": "VMEScriptConfig",
                    "data": {
                        "enabled": true,
                        "id": "{617ae9df-4f49-49c3-b46e-1559914249ab}",
                        "name": "mvlc_trigger_io",
                        "properties": {
                            "display_name": "MVLC Trigger/IO",
                            "icon": ":/vme_module.png"
                        },
                        "variable_table": {
                            "name": "",
                            "variables": {
                            }
                        },
                        "vme_script": "##############################################################\n# MVLC Trigger I/O  setup via internal VME interface         #\n##############################################################\n\n# Note: This file was generated by mvme. Editing existing\n# values is allowed and these changes will used by mvme\n# when next parsing the script. Changes to the basic\n# structure, like adding new write or read commands, are not\n# allowed. These changes will be lost the next time the file\n# is modified by mvme.\n\n# The initialization commands for each Trigger I/O unit are\n# wrapped in mvlc_stack_begin/end blocks. This is to ensure\n# the commands are executed atomically without being\n# interleaved by other commands also touching the Trigger I/O\n# system, e.g. the routine for readout of the builtin DSO.\n\n# Check for minimum required mvme version\nmvme_require_version 1.9.1\n\n# Internal MVLC VME interface address\nsetbase 0xffff0000\n\n# Level0 #####################################################\n\n# timer0\nmvlc_stack_begin\n  0x0200 0x0000    # select L0.Unit0\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer1\nmvlc_stack_begin\n  0x0200 0x0001    # select L0.Unit1\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer2\nmvlc_stack_begin\n  0x0200 0x0002    # select L0.Unit2\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# timer3\nmvlc_stack_begin\n  0x0200 0x0003    # select L0.Unit3\n  0x0302      0    # range (0:ns, 1:us, 2:ms, 3:s)\n  0x0304      0    # delay [ns]\n  0x0306      0    # period [in range units]\nmvlc_stack_end\n\n# trigger_resource0\nmvlc_stack_begin\n  0x0200 0x0004    # select L0.Unit4\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource1\nmvlc_stack_begin\n  0x0200 0x0005    # select L0.Unit5\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource2\nmvlc_stack_begin\n  0x0200 0x0006    # select L0.Unit6\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource3\nmvlc_stack_begin\n  0x0200 0x0007    # select L0.Unit7\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource4\nmvlc_stack_begin\n  0x0200 0x0008    # select L0.Unit8\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource5\nmvlc_stack_begin\n  0x0200 0x0009    # select L0.Unit9\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource6\nmvlc_stack_begin\n  0x0200 0x000a    # select L0.Unit10\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# trigger_resource7\nmvlc_stack_begin\n  0x0200 0x000b    # select L0.Unit11\n  0x0380      0    # type: 0=IRQ, 1=SoftTrigger, 2=SlaveTrigger\n  0x0300      0    # irq_index (zero-based: 0: IRQ1, .., 6: IRQ7)\n  0x0306      0    # slave_trigger: delay [ns]\n  0x0308      0    # slave_trigger: width [ns]\n  0x030a      0    # slave_trigger: holdoff [ns]\n  0x030c      0    # slave_trigger: invert (start on trailing edge of input)\n  0x0382      0    # slave trigger number (0..3)\nmvlc_stack_end\n\n# stack_busy0\nmvlc_stack_begin\n  0x0200 0x000c    # select L0.Unit12\n  0x0300      0    # stack_index\nmvlc_stack_end\n\n# stack_busy1\nmvlc_stack_begin\n  0x0200 0x000d    # select L0.Unit13\n  0x0300      0    # stack_index\nmvlc_stack_end\n\n# NIM0\nmvlc_stack_begin\n  0x0200 0x0010    # select L0.Unit16\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM1\nmvlc_stack_begin\n  0x0200 0x0011    # select L0.Unit17\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM2\nmvlc_stack_begin\n  0x0200 0x0012    # select L0.Unit18\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM3\nmvlc_stack_begin\n  0x0200 0x0013    # select L0.Unit19\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM4\nmvlc_stack_begin\n  0x0200 0x0014    # select L0.Unit20\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM5\nmvlc_stack_begin\n  0x0200 0x0015    # select L0.Unit21\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM6\nmvlc_stack_begin\n  0x0200 0x0016    # select L0.Unit22\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM7\nmvlc_stack_begin\n  0x0200 0x0017    # select L0.Unit23\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM8\nmvlc_stack_begin\n  0x0200 0x0018    # select L0.Unit24\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM9\nmvlc_stack_begin\n  0x0200 0x0019    # select L0.Unit25\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM10\nmvlc_stack_begin\n  0x0200 0x001a    # select L0.Unit26\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM11\nmvlc_stack_begin\n  0x0200 0x001b    # select L0.Unit27\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM12\nmvlc_stack_begin\n  0x0200 0x001c    # select L0.Unit28\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# NIM13\nmvlc_stack_begin\n  0x0200 0x001d    # select L0.Unit29\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x030a      0    # direction (0:in, 1:out)\n  0x0310      0    # output activate\nmvlc_stack_end\n\n# IRQ1\nmvlc_stack_begin\n  0x0200 0x0021    # select L0.Unit33\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ2\nmvlc_stack_begin\n  0x0200 0x0022    # select L0.Unit34\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ3\nmvlc_stack_begin\n  0x0200 0x0023    # select L0.Unit35\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ4\nmvlc_stack_begin\n  0x0200 0x0024    # select L0.Unit36\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ5\nmvlc_stack_begin\n  0x0200 0x0025    # select L0.Unit37\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# IRQ6\nmvlc_stack_begin\n  0x0200 0x0026    # select L0.Unit38\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\nmvlc_stack_end\n\n# Level1 #####################################################\n\n# L1.LUT0\nmvlc_stack_begin\n  0x0200 0x0100    # select L1.Unit0\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT1\nmvlc_stack_begin\n  0x0200 0x0101    # select L1.Unit1\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT2\nmvlc_stack_begin\n  0x0200 0x0102    # select L1.Unit2\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0380      0    # connect input0 to 'NIM8'\n  0x0382      0    # connect input1 to 'NIM9'\n  0x0384      0    # connect input2 to 'NIM10'\nmvlc_stack_end\n\n# L1.LUT3\nmvlc_stack_begin\n  0x0200 0x0103    # select L1.Unit3\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT4\nmvlc_stack_begin\n  0x0200 0x0104    # select L1.Unit4\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT5\nmvlc_stack_begin\n  0x0200 0x0105    # select L1.Unit5\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# L1.LUT6\nmvlc_stack_begin\n  0x0200 0x0106    # select L1.Unit6\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\nmvlc_stack_end\n\n# Level2 #####################################################\n\n# L2.LUT0\nmvlc_stack_begin\n  0x0200 0x0200    # select L2.Unit0\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT0 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# L2.LUT1\nmvlc_stack_begin\n  0x0200 0x0201    # select L2.Unit1\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT1 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# L2.LUT2\nmvlc_stack_begin\n  0x0200 0x0202    # select L2.Unit2\n  0x0300 0x0000    # cells 0-3\n  0x0302 0x0000    # cells 4-7\n  0x0304 0x0000    # cells 8-11\n  0x0306 0x0000    # cells 12-15\n  0x0308 0x0000    # cells 16-19\n  0x030a 0x0000    # cells 20-23\n  0x030c 0x0000    # cells 24-27\n  0x030e 0x0000    # cells 28-31\n  0x0310 0x0000    # cells 32-35\n  0x0312 0x0000    # cells 36-39\n  0x0314 0x0000    # cells 40-43\n  0x0316 0x0000    # cells 44-47\n  0x0318 0x0000    # cells 48-51\n  0x031a 0x0000    # cells 52-55\n  0x031c 0x0000    # cells 56-59\n  0x031e 0x0000    # cells 60-63\n  0x0320 0b0000    # strobed_outputs\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382      0    # connect input1 to 'timer0'\n  0x0384      0    # connect input2 to 'timer0'\n  # L2.LUT2 strobe gate generator\n  0x0332      0    # delay [ns]\n  0x0334      8    # width [ns]\n  0x0336      0    # holdoff [ns]\n  0x0338      0    # invert (start on trailing edge of input)\n  0x0386      0    # connect strobe_input to 'timer0'\nmvlc_stack_end\n\n# Level3 #####################################################\n\n# StackStart0\nmvlc_stack_begin\n  0x0200 0x0300    # select L3.Unit0\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart1\nmvlc_stack_begin\n  0x0200 0x0301    # select L3.Unit1\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart2\nmvlc_stack_begin\n  0x0200 0x0302    # select L3.Unit2\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# StackStart3\nmvlc_stack_begin\n  0x0200 0x0303    # select L3.Unit3\n  0x0300      0    # activate\n  0x0302      0    # stack index\n  0x0304      0    # delay [ns]\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger0\nmvlc_stack_begin\n  0x0200 0x0304    # select L3.Unit4\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger1\nmvlc_stack_begin\n  0x0200 0x0305    # select L3.Unit5\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger2\nmvlc_stack_begin\n  0x0200 0x0306    # select L3.Unit6\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# MasterTrigger3\nmvlc_stack_begin\n  0x0200 0x0307    # select L3.Unit7\n  0x0300      0    # activate\n  0x0380      0    # connect input0 to 'timer0'\nmvlc_stack_end\n\n# Counter0+Timestamper\nmvlc_stack_begin\n  0x0200 0x0308    # select L3.Unit8\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter1\nmvlc_stack_begin\n  0x0200 0x0309    # select L3.Unit9\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter2\nmvlc_stack_begin\n  0x0200 0x030a    # select L3.Unit10\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter3\nmvlc_stack_begin\n  0x0200 0x030b    # select L3.Unit11\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter4\nmvlc_stack_begin\n  0x0200 0x030c    # select L3.Unit12\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter5\nmvlc_stack_begin\n  0x0200 0x030d    # select L3.Unit13\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter6\nmvlc_stack_begin\n  0x0200 0x030e    # select L3.Unit14\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# Counter7\nmvlc_stack_begin\n  0x0200 0x030f    # select L3.Unit15\n  0x030e      0    # clear on latch\n  0x0380      0    # connect input0 to 'timer0'\n  0x0382     21    # connect input1 to '<not connected>'\nmvlc_stack_end\n\n# NIM unit connections (Note: NIM setup is done in the Level0 section)\n\n# NIM0\nmvlc_stack_begin\n  0x0200 0x0310    # select L3.Unit16\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM1\nmvlc_stack_begin\n  0x0200 0x0311    # select L3.Unit17\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM2\nmvlc_stack_begin\n  0x0200 0x0312    # select L3.Unit18\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM3\nmvlc_stack_begin\n  0x0200 0x0313    # select L3.Unit19\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM4\nmvlc_stack_begin\n  0x0200 0x0314    # select L3.Unit20\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM5\nmvlc_stack_begin\n  0x0200 0x0315    # select L3.Unit21\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM6\nmvlc_stack_begin\n  0x0200 0x0316    # select L3.Unit22\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM7\nmvlc_stack_begin\n  0x0200 0x0317    # select L3.Unit23\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM8\nmvlc_stack_begin\n  0x0200 0x0318    # select L3.Unit24\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM9\nmvlc_stack_begin\n  0x0200 0x0319    # select L3.Unit25\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM10\nmvlc_stack_begin\n  0x0200 0x031a    # select L3.Unit26\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM11\nmvlc_stack_begin\n  0x0200 0x031b    # select L3.Unit27\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM12\nmvlc_stack_begin\n  0x0200 0x031c    # select L3.Unit28\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# NIM13\nmvlc_stack_begin\n  0x0200 0x031d    # select L3.Unit29\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS0\nmvlc_stack_begin\n  0x0200 0x031e    # select L3.Unit30\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS1\nmvlc_stack_begin\n  0x0200 0x031f    # select L3.Unit31\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n# LVDS2\nmvlc_stack_begin\n  0x0200 0x0320    # select L3.Unit32\n  0x0300      0    # delay [ns]\n  0x0302      0    # width [ns]\n  0x0304      0    # holdoff [ns]\n  0x0306      0    # invert (start on trailing edge of input)\n  0x0310      0    # output activate\n  0x0380      0    # connect input0 to 'L2.LUT0.OUT0'\nmvlc_stack_end\n\n##############################################################\n# MVLC Trigger I/O specific meta information                 #\n##############################################################\nmeta_block_begin mvlc_trigger_io\nnames:\n  level0:\n    0: timer0\n    1: timer1\n    2: timer2\n    3: timer3\n    4: trigger_resource0\n    5: trigger_resource1\n    6: trigger_resource2\n    7: trigger_resource3\n    8: trigger_resource4\n    9: trigger_resource5\n    10: trigger_resource6\n    11: trigger_resource7\n    12: stack_busy0\n    13: stack_busy1\n    14: sysclk\n    15: daq_start\n    16: NIM0\n    17: NIM1\n    18: NIM2\n    19: NIM3\n    20: NIM4\n    21: NIM5\n    22: NIM6\n    23: NIM7\n    24: NIM8\n    25: NIM9\n    26: NIM10\n    27: NIM11\n    28: NIM12\n    29: NIM13\n    30: <unused>\n    31: <unused>\n    32: <unused>\n    33: IRQ1\n    34: IRQ2\n    35: IRQ3\n    36: IRQ4\n    37: IRQ5\n    38: IRQ6\n  level1:\n    0:\n      0: L1.LUT0.OUT0\n      1: L1.LUT0.OUT1\n      2: L1.LUT0.OUT2\n    1:\n      0: L1.LUT1.OUT0\n      1: L1.LUT1.OUT1\n      2: L1.LUT1.OUT2\n    2:\n      0: L1.LUT2.OUT0\n      1: L1.LUT2.OUT1\n      2: L1.LUT2.OUT2\n    3:\n      0: L1.LUT3.OUT0\n      1: L1.LUT3.OUT1\n      2: L1.LUT3.OUT2\n    4:\n      0: L1.LUT4.OUT0\n      1: L1.LUT4.OUT1\n      2: L1.LUT4.OUT2\n    5:\n      0: L1.LUT5.OUT0\n      1: L1.LUT5.OUT1\n      2: L1.LUT5.OUT2\n    6:\n      0: L1.LUT6.OUT0\n      1: L1.LUT6.OUT1\n      2: L1.LUT6.OUT2\n  level2:\n    0:\n      0: L2.LUT0.OUT0\n      1: L2.LUT0.OUT1\n      2: L2.LUT0.OUT2\n    1:\n      0: L2.LUT1.OUT0\n      1: L2.LUT1.OUT1\n      2: L2.LUT1.OUT2\n    2:\n      0: L2.LUT2.OUT0\n      1: L2.LUT2.OUT1\n      2: L2.LUT2.OUT2\n  level3:\n    0: StackStart0\n    1: StackStart1\n    2: StackStart2\n    3: StackStart3\n    4: MasterTrigger0\n    5: MasterTrigger1\n    6: MasterTrigger2\n    7: MasterTrigger3\n    8: Counter0+Timestamper\n    9: Counter1\n    10: Counter2\n    11: Counter3\n    12: Counter4\n    13: Counter5\n    14: Counter6\n    15: Counter7\n    30: LVDS0\n    31: LVDS1\n    32: LVDS2\n    33: <not connected>\nsettings:\n  level0:\n    0:\n      soft_activate: false\n    1:\n      soft_activate: false\n    2:\n      soft_activate: false\n    3:\n      soft_activate: false\n  level3:\n    8:\n      soft_activate: false\n    9:\n      soft_activate: false\n    10:\n      soft_activate: false\n    11:\n      soft_activate: false\n    12:\n      soft_activate: false\n    13:\n      soft_activate: false\n    14:\n      soft_activate: false\n    15:\n      soft_activate: false\nmeta_block_end"
                    }
                }
            ],
            "enabled": true,
            "id": "{538161d0-1aed-4988-81d3-2c8bd6561716}",
            "name": "global_objects",
            "properties": {
                "display_name": "Global Objects",
                "icon": ":/vme_global_scripts.png"
            },
            "variable_table": {
                "name": "",
                "variables": {
                }
            }
        },
        "id": "{2ed1036a-69de-4db7-9759-b5a679915120}",
        "name": "",
        "properties": {
            "version": 4
        },
        "variable_table": {
            "name": "",
            "variables": {
            }
        },
        "vme_controller": {
            "settings": {
                "mvlc_crate_id": 0,
                "mvlc_eth_enable_jumbos": false,
                "mvlc_hostname": "MVLC-0124"
            },
            "type": "MVLC_ETH"
        }
    }
}
